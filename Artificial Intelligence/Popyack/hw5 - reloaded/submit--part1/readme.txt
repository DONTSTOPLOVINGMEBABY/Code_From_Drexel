The heuristic function, hmj32_h, is a function that statically computes a score for a board that is passed to the function for the current player. The function uses several methods in order to compute a score to represent the quality of a given state. The higher the value, the better the state. 


Vertical Straight -- This function will calculate all the pieces that are vertically in a row. For example, if we were calculating white’s vertical straight score for this board, then they would score a 3 because of the three in-line white pieces in the upper-left quadrant. Vertical straight only awards points for straights with 2 or more pieces in a row. This means that vertical straight will never award points for single pieces lying around, and hence white would not receive any points for the pieces in the upper-right hand quadrant. 


Horizontal Straight -- This function is like Vertical Straight in that it awards 1 point for each piece that it finds next to another piece of the same type in the same row and does not award points for single pieces lying around (i.e. there must be at least two in a row for horizontal_straight to award points). If we were only calculating the horizontal straight value for black on the board above, we would receive a value of 4 from the four in-line pieces in the sixth row. 


Diagonal Straight -- This function is also very similar to horizontal straight and vertical straight: it will award one point for each in-line piece that it finds in one of the diagonal rows. Pieces must be in the same row to receive points and there must be more than one piece for points to be awarded. The guts of the diagonal straight function (particularly the while loop) are very similar to that of the horizontal straights function (it compares neighbors and awards one point for each neighbor found. It also uses a carry_one method like Horizontal and Vertical Straight Functions). In order to access the diagonals, I had to hardcode the values into a list. I’m sure there are better ways to do this, but I couldn’t think of any within the time frame. 


Final Call = This function is responsible for calling all the functions and summing all the scores together to get a composite heuristic score. Values for Diagonals, Verticals, and Horizontal Straights are computed for each player. The current player has their values added to the heuristic and the opponent’s values are subtracted from the heuristic. This way, the player can use the heuristic to best understand not only their own position, but that of their opponent. If any of the players are found to have 4 pieces in a row, there is a multiplier applied to their scores. If the current player is found to have a diagonal with 4 in a row and a vertical column with 4 in a row, then the would receive an additional 100 points for each 4-in a row they have (this means they would receive an extra 200 points onto their heuristic). The opposite goes for the opponent, if they had a vertical column and horizontal row with 4 in a row, then 100 points would be deducted from the heuristic. 